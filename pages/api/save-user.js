// pages/api/save-user.js
import { Pool } from "pg";

// 1) ENV
// DB_URL=postgres://user:pass@host:5432/dbname
const pool = new Pool({
  connectionString: process.env.DB_URL,
  ssl: { rejectUnauthorized: false },
});

// –Ω–µ–±–æ–ª—å—à–∞—è —É—Ç–∏–ª–∏—Ç–∞: –±–µ–∑–æ–ø–∞—Å–Ω–æ –ø–∞—Ä—Å–∏–º chat_id
function parseChatId(value) {
  if (value === null || value === undefined) return null;
  const s = String(value).trim();
  if (!/^-?\d+$/.test(s)) return null;
  const n = Number(s);
  // chat_id —É –¢–µ–ª–µ–≥—Ä–∞–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º/–±–æ–ª—å—à–∏–º ‚Äî —Ö—Ä–∞–Ω–∏–º –≤ BIGINT
  return Number.isFinite(n) ? n : null;
}

// –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Å—Ç—Ä–∞–Ω—É
function normalizeCountry(country) {
  if (!country) return null;
  const c = String(country).trim().toLowerCase();
  if (c === "kz" || c === "–∫–∞–∑–∞—Ö—Å—Ç–∞–Ω") return "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω";
  if (c === "ae" || c === "–æ–∞—ç" || c === "–æ–∞–µ") return "–û–ê–≠";
  // –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å —Å–ø–∏—Å–æ–∫
  return null;
}

// –æ–≥—Ä–∞–Ω–∏—á–∏–º –¥–ª–∏–Ω—É state
function sanitizeState(state) {
  if (!state) return null;
  const s = String(state).trim();
  if (s.length === 0 || s.length > 256) return null;
  return s;
}

export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω" });
  }

  try {
    const { chat_id, state, country } = req.body || {};
    console.log("üì• /api/save-user payload:", req.body);

    const chatId = parseChatId(chat_id);
    const normCountry = normalizeCountry(country);
    const safeState = sanitizeState(state);

    if (!chatId || !safeState || !normCountry) {
      return res.status(400).json({
        error: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
        details:
          "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ chat_id (—á–∏—Å–ª–æ), state (1..256 —Å–∏–º–≤–æ–ª–æ–≤) –∏ country (kz/ae –∏–ª–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω/–û–ê–≠).",
      });
    }

    // UPSERT –≤ users: chat_id PK/UNIQUE
    // –ï—Å–ª–∏ —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –¥—Ä—É–≥–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ users ‚Äî —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –∏—Ö –Ω–µ —Ç—Ä–æ–≥–∞–µ—Ç
    const sql = `
      INSERT INTO users (chat_id, state, country, updated_at)
      VALUES ($1, $2, $3, NOW())
      ON CONFLICT (chat_id) DO UPDATE
      SET state = EXCLUDED.state,
          country = EXCLUDED.country,
          updated_at = NOW()
    `;

    const client = await pool.connect();
    try {
      await client.query(sql, [chatId, safeState, normCountry]);
    } finally {
      client.release();
    }

    console.log("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω:", { chatId, normCountry });
    return res.status(200).json({ message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω!" });
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ /api/save-user:", err);
    return res
      .status(500)
      .json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", details: err?.message || String(err) });
  }
}
